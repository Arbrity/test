迭代器模式：
较为常用的设计模式，属于行为型模式
如果我们的集合元素是用不同方法实现的，如数组，java集合类等
当客户端要遍历这些元素时就会用到多种遍历方式，此时可以考虑这种模式

作用：提供一种遍历集合的元素的统一接口，用一致的方法遍历集合元素
     不需要知道集合对象的底层表示，也就是说不用暴露其内部内容

优点:
    1、提供一个统一的方法来遍历对象，使用者不用再考虑聚合的类型
    2、隐藏了聚合的内部结构，客户端要遍历聚合的时候只能取到迭代器，而不会知道聚合的具体组成
    3、提供了一种设计思想：一个类应该只有一个引起变化的原因（也就是单一职责原则）
缺点:
       每个聚合对象都要一个迭代器，会生成多个迭代器，不好管理类

使用场合：
    当要展示一组相似对象，或者遍历一组相同对象时使用，适合使用迭代器模式